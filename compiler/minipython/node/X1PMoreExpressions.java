/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import minipython.analysis.*;

public final class X1PMoreExpressions extends XPMoreExpressions
{
    private XPMoreExpressions _xPMoreExpressions_;
    private PMoreExpressions _pMoreExpressions_;

    public X1PMoreExpressions()
    {
    }

    public X1PMoreExpressions(
        XPMoreExpressions _xPMoreExpressions_,
        PMoreExpressions _pMoreExpressions_)
    {
        setXPMoreExpressions(_xPMoreExpressions_);
        setPMoreExpressions(_pMoreExpressions_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPMoreExpressions getXPMoreExpressions()
    {
        return _xPMoreExpressions_;
    }

    public void setXPMoreExpressions(XPMoreExpressions node)
    {
        if(_xPMoreExpressions_ != null)
        {
            _xPMoreExpressions_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPMoreExpressions_ = node;
    }

    public PMoreExpressions getPMoreExpressions()
    {
        return _pMoreExpressions_;
    }

    public void setPMoreExpressions(PMoreExpressions node)
    {
        if(_pMoreExpressions_ != null)
        {
            _pMoreExpressions_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pMoreExpressions_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPMoreExpressions_ == child)
        {
            _xPMoreExpressions_ = null;
        }

        if(_pMoreExpressions_ == child)
        {
            _pMoreExpressions_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPMoreExpressions_) +
            toString(_pMoreExpressions_);
    }
}
